{"version":3,"sources":["utils/HttpRequestContainer.tsx","utils/index.tsx","ui/Table.tsx","components/DeploymentDetail/DeploymentStatusTag.tsx","components/DeploymentsTable.tsx","components/Label.tsx","components/BentoServiceTable.tsx","ui/Layout.ts","pages/HomePage.tsx","pages/DeploymentsList.tsx","components/DeploymentDetail/ConfigurationTable.tsx","components/BentoServiceDetail/ApisTable.tsx","components/DeploymentDetail/ApisTable.tsx","components/DeploymentDetail/InfoTable.tsx","components/DeploymentDetail/ErrorCard.tsx","pages/DeploymentDetails.tsx","pages/Repository.tsx","pages/BentoServiceList.tsx","components/BentoServiceDetail/EnvTable.tsx","components/BentoServiceDetail/ArtifactsTable.tsx","components/LabelDetailSection.tsx","pages/BentoServiceDetail.tsx","components/Breadcrumbs.tsx","components/NavigationBar.tsx","app.tsx","index.tsx","assets/bentoml-logo.png"],"names":["DisplayHttpError","error","JSON","stringify","fetch","options","props","callback","Object","assign","url","data","method","headers","params","axios","then","response","isLoading","catch","undefined","HttpRequestContainer","React","info","setInfo","children","displayTimeInFromNowFormat","seconds","displayAgoString","moment","fromNow","TableContainer","styled","div","width","margin","backgroundColor","Row","display","flexWrap","borderBottom","showBottomBorder","TableHeader","fontWeight","Cell","color","textAlign","padding","flex","height","position","whiteSpace","overflowWrap","minWidth","Table","content","header","ratio","finalHeader","zip","map","h","i","key","row","r","link","to","style","textDecoration","cell","j","DeploymentStatusTag","statusColor","state","Intent","SUCCESS","DANGER","PRIMARY","NONE","intent","verticalAlign","DEPLOYMENTS_TABLE_HEADERS","DEPLOYMENTS_TABLE_RATIO","DeploymentsTable","parsedDeployments","deployments","deployment","name","namespace","spec","operator","bento_name","bento_version","Number","created_at","last_updated_at","Label","tagValue","value","BENTO_TABLE_HEADERS","BENTO_TABLE_RATIO","BentoServiceTable","parsedBentoServices","bentos","bento","metadata","bento_service_metadata","lodash","version","apis","api","input_type","join","apisToDisplayFormat","artifacts","artifact","artifact_type","artifactsToDisplayFormat","labels","labelsToDisplayFormat","Layout","maxWidth","marginBottom","Section","section","HomePage","limit","deploymentDisplay","href","target","rel","role","aria-label","DeploymentsList","requestParams","match","activeDeploymentCount","length","parseKeyForDisplay","replace","ConfigurationTable","parsedConfiguration","aws_lambda_operator_config","push","inputConfigToTableContent","input_config","config","fields","displayInputList","configureKeys","keys","index","valueObject","valueType","values","APIS_TABLE_HEADER","APIS_TABLE_RATIO","ApisTable","apisTableContent","route","batch","output_type","docs","DeploymentApisTable","apiName","api_name","sagemaker_opeartor_config","deployedApi","find","displayTimestampForDeployment","toISOString","displayTimeISOString","InfoTable","endpointValues","info_json","parse","endpoints","parsedInfo","ErrorCard","indexOf","elevation","error_message","DeploymentDetails","deployment_name","detailDisplay","Repository","queryString","query","location","search","qs","ignoreQueryPrefix","offset","bentoDisplay","hasBento","justifyContent","marginTop","BentoServicesList","ENV_TABLE_RATIO","EnvTable","env","parsedEnv","env_value","ARTIFACTS_TABLE_HEADER","ARTIFACTS_TABLE_RATIO","artifactMetadataToTableContent","artifactMetadata","result","parseGrpcStructToObject","structObject","keyList","item","ArtifactsTable","artifactsTableContent","LabelDetailSection","BentoServiceDetail","displayBentoServiceDetail","toDate","toLocaleString","uri","getBreadcrumbs","baseURL","pathname","pathSnippets","split","filter","isLastOne","slice","formattedName","includes","capitalize","text","Breadcrumbs","breadcrumbs","setBreadcrumbs","useLocation","HOME_CRUMB","parsedBreadcrumbs","unshift","items","getHighlightStyle","highlight","path","NavigationBar","setHighlight","currentLocation","paddingLeft","marginLeft","align","Alignment","LEFT","src","logo","alt","className","Classes","MINIMAL","large","App","useCookies","cookies","defaults","setBaseUrl","basename","component","exact","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f6224bc1.chunk.js","sourcesContent":["import * as React from \"react\";\nimport axios, { Method } from \"axios\";\nimport { Card, Spinner } from \"@blueprintjs/core\";\n\ninterface IHttpRequestContainerProps {\n  url: string;\n  data?: any;\n  method?: Method;\n  headers?: any;\n  params?: any;\n  children?: any;\n}\n\nconst HttpRequestContainer: React.FC<IHttpRequestContainerProps> = (props) => {\n  const [info, setInfo] = React.useState({\n    data: undefined,\n    error: undefined,\n    isLoading: true,\n  });\n\n  React.useEffect(() => {\n    fetch(undefined, props, setInfo);\n  }, [props]);\n\n  if (info.isLoading) {\n    return <Spinner />;\n  }\n  if (info.error) {\n    return <DisplayHttpError error={info.error} />;\n  }\n  return props.children({\n    data: info.data,\n  });\n};\n\nconst DisplayHttpError = ({ error }) => {\n  return (\n    <Card>\n      <h3>Encounter HTTP Request Error</h3>\n      <div>{JSON.stringify(error)}</div>\n    </Card>\n  );\n};\n\nexport const setBaseUrl = (baseURL: string) => {\n  axios.defaults.baseURL = baseURL;\n};\n\nconst fetch = (options = {}, props, callback) => {\n  const { url, data, method, headers, params } = Object.assign(\n    {},\n    props,\n    options\n  );\n\n  return axios({ method, url, data, headers, params })\n    .then((response) => {\n      callback({ data: response.data, isLoading: false, error: false });\n    })\n    .catch((error) => {\n      callback({ error: error.response, isLoading: false, data: undefined });\n    });\n};\n\nexport default HttpRequestContainer;\n","import * as moment from \"../../node_modules/moment/moment\";\nimport * as qs from \"qs\";\n\nexport const displayTimeInFromNowFormat = (\n  seconds: number,\n  displayAgoString: boolean = false\n) => {\n  return moment.unix(seconds).fromNow(!displayAgoString);\n};\n\nexport const displayTimeISOString = (seconds: number) => {\n  return moment.unix(seconds).toISOString();\n};\n\nexport const getQueryObject = (queryString) => {\n  return qs.parse(queryString, { ignoreQueryPrefix: true });\n};\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { zip } from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nconst TableContainer = styled.div({\n  width: \"100%\",\n  margin: \"auto\",\n  backgroundColor: \"#F5F8FA\",\n});\n\nconst Row = styled.div<{ showBottomBorder?: boolean }>((props) => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  borderBottom: props.showBottomBorder ? \"2px solid #D8E1E8\" : \"none\",\n  \":hover\": {\n    backgroundColor: \"#EBF1F5\",\n  },\n}));\n\nconst TableHeader = styled(Row)({\n  borderBottom: \"2px solid #D8E1E8\",\n  fontWeight: 600,\n  \":hover\": {\n    backgroundColor: \"#F5F8FA\",\n  },\n});\n\nconst Cell = styled.div<{\n  flex?: number;\n}>((props) => ({\n  color: \"#394B59\",\n  textAlign: \"left\",\n  padding: \"20px\",\n  flex: props.flex ? props.flex : 1,\n  height: \"auto\",\n  position: \"relative\",\n  whiteSpace: \"pre-wrap\",\n  overflowWrap: \"break-word\",\n  minWidth: \"100px\",\n}));\n\nexport interface ITableProps {\n  content: Array<{ content: any[]; link?: string }>;\n  header?: Array<string>;\n  ratio?: Array<number>;\n}\n\nconst Table: React.FC<ITableProps> = (props) => {\n  const { content, header, ratio } = props;\n  const finalHeader = ratio && header ? zip(header, ratio) : header;\n  return (\n    <TableContainer>\n      {finalHeader && (\n        <TableHeader>\n          {// prettier-ignore\n          // @ts-ignore\n          finalHeader.map((h, i) => (\n              <Cell key={i} flex={h[1]}>\n                {h[0]}\n              </Cell>\n            ))}\n        </TableHeader>\n      )}\n      {content.map((row, i) => {\n        const r = zip(row.content, ratio);\n        if (row.link) {\n          return (\n            <Link key={i} to={row.link} style={{ textDecoration: \"none\" }}>\n              <Row key={i}>\n                {r.map((cell, j) => (\n                  <Cell key={j} flex={cell[1]}>\n                    {cell[0]}\n                  </Cell>\n                ))}\n              </Row>\n            </Link>\n          );\n        }\n\n        return (\n          <Row key={i}>\n            {r.map((cell, j) => (\n              <Cell key={j} flex={cell[1]}>\n                {cell[0]}\n              </Cell>\n            ))}\n          </Row>\n        );\n      })}\n    </TableContainer>\n  );\n};\n\nexport default Table;\n","import * as React from \"react\";\nimport { Tag, Intent } from \"@blueprintjs/core\";\n\nconst DeploymentStatusTag = ({ state }) => {\n  let statusColor;\n  state = state || \"PENDING\";\n  switch (state) {\n    case \"RUNNING\":\n    case \"SUCCESSED\":\n      statusColor = Intent.SUCCESS;\n      break;\n    case \"FAILED\":\n    case \"ERROR\":\n    case \"CRASH_LOOP_BACK_OFF\":\n      statusColor = Intent.DANGER;\n      break;\n    case \"PENDING\":\n      statusColor = Intent.PRIMARY;\n      break;\n    default:\n      statusColor = Intent.NONE;\n  }\n\n  return (\n    <Tag intent={statusColor} style={{ verticalAlign: \"middle\" }}>\n      {state}\n    </Tag>\n  );\n};\n\nexport default DeploymentStatusTag;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { displayTimeInFromNowFormat } from \"../utils\";\nimport Table from \"../ui/Table\";\nimport DeploymentStatusTag from \"./DeploymentDetail/DeploymentStatusTag\";\n\nconst DEPLOYMENTS_TABLE_HEADERS = [\n  \"Name\",\n  \"Namespace\",\n  \"Platform\",\n  \"BentoService\",\n  \"Status\",\n  \"Age\",\n  \"Last updated at\",\n  \"\",\n];\nconst DEPLOYMENTS_TABLE_RATIO = [3, 2, 2, 5, 2, 1, 2, 1];\n\nconst DeploymentsTable = (props) => {\n  const { deployments } = props;\n  const parsedDeployments = deployments.map((deployment) => ({\n    content: [\n      deployment.name,\n      deployment.namespace,\n      deployment.spec.operator,\n      `${deployment.spec.bento_name}:${deployment.spec.bento_version}`,\n      <DeploymentStatusTag state={deployment.state.state} />,\n      displayTimeInFromNowFormat(Number(deployment.created_at.seconds)),\n      displayTimeInFromNowFormat(\n        Number(deployment.last_updated_at.seconds),\n        true\n      ),\n      <Link to={`/deployments/${deployment.namespace}/${deployment.name}`}>\n        Detail\n      </Link>,\n    ],\n    link: `/deployments/${deployment.namespace}/${deployment.name}`,\n  }));\n\n  return (\n    <Table\n      content={parsedDeployments}\n      ratio={DEPLOYMENTS_TABLE_RATIO}\n      header={DEPLOYMENTS_TABLE_HEADERS}\n    />\n  );\n};\n\nexport default DeploymentsTable;\n","import * as React from \"react\";\nimport { Tag } from \"@blueprintjs/core\";\n\nexport interface ILabelProps {\n  name: string;\n  value: string;\n}\n\nconst Label: React.FC<ILabelProps> = (props) => {\n  const tagValue = `${props.name}:${props.value}`;\n  return (\n    <Tag key={tagValue} style={{ margin: 5 }}>\n      {tagValue}\n    </Tag>\n  );\n};\n\nexport default Label;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as lodash from \"lodash\";\n\nimport { displayTimeInFromNowFormat } from \"../utils\";\nimport Table from \"../ui/Table\";\nimport Label from \"./Label\";\n\nconst apisToDisplayFormat = (apis: any) => {\n  if (!apis) {\n    return \"\";\n  }\n  return apis.map((api: any) => `${api.name}<${api.input_type}>`).join(\"\\n\");\n};\n\nconst artifactsToDisplayFormat = (artifacts) => {\n  if (!artifacts) {\n    return \"\";\n  }\n  return artifacts\n    .map((artifact) => `${artifact.name}<${artifact.artifact_type}>`)\n    .join(\"\\n\");\n};\n\nconst labelsToDisplayFormat = (labels) => {\n  if (!labels) {\n    return \"\";\n  }\n  return (\n    <div>\n      {lodash.map(labels, (value, name) => {\n        return <Label name={name} value={value} />;\n      })}\n    </div>\n  );\n};\n\nconst BENTO_TABLE_HEADERS = [\n  \"BentoService(name:version)\",\n  \"Age\",\n  \"Labels\",\n  \"APIs\",\n  \"Artifacts\",\n  \"\",\n];\nconst BENTO_TABLE_RATIO = [5, 2, 5, 3, 3, 1];\n\nconst BentoServiceTable = (props) => {\n  const { bentos } = props;\n  const parsedBentoServices = bentos.map((bento) => {\n    const metadata = bento.bento_service_metadata;\n    if (lodash.isEmpty(metadata)) {\n      // When a BentoBundle is created but bundle file upload is not finished, the\n      // metadata field will be empty\n      return {\n        content: [\n          `${bento.name}:${bento.version}`,\n          null,\n          null,\n          null,\n          null,\n          <Link to={`/repository/${bento.name}/${bento.version}`}>Detail</Link>,\n        ],\n      };\n    } else {\n      const apis = apisToDisplayFormat(metadata.apis);\n      const artifacts = artifactsToDisplayFormat(metadata.artifacts);\n      const labels = labelsToDisplayFormat(metadata.labels);\n\n      return {\n        content: [\n          `${bento.name}:${bento.version}`,\n          displayTimeInFromNowFormat(Number(metadata.created_at.seconds)),\n          labels,\n          apis,\n          artifacts,\n          <Link to={`/repository/${bento.name}/${bento.version}`}>Detail</Link>,\n        ],\n        link: `/repository/${bento.name}/${bento.version}`,\n      };\n    }\n  });\n\n  return (\n    <Table\n      content={parsedBentoServices}\n      ratio={BENTO_TABLE_RATIO}\n      header={BENTO_TABLE_HEADERS}\n    />\n  );\n};\n\nexport default BentoServiceTable;\n","import styled from \"@emotion/styled\";\n\nconst Layout = styled.div({\n  margin: \"0 auto\",\n  maxWidth: \"80%\",\n  marginBottom: \"100px\",\n  minWidth: \"960px\",\n});\n\nexport const Section = styled.section({\n  margin: \"30px 0 0\",\n});\n\nexport default Layout;\n","import * as React from \"react\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport DeploymentsTable from \"../components/DeploymentsTable\";\nimport BentoServiceTable from \"../components/BentoServiceTable\";\nimport { Section } from \"../ui/Layout\";\n\nconst HomePage = () => (\n  <div>\n    <HttpRequestContainer\n      url=\"/api/ListDeployments\"\n      method=\"get\"\n      params={{ limit: 5 }}\n    >\n      {({ data }) => {\n        let deploymentDisplay;\n        if (data && data.deployments) {\n          deploymentDisplay = (\n            <DeploymentsTable deployments={data.deployments} />\n          );\n        } else {\n          deploymentDisplay = (\n            <a\n              href=\"https://docs.bentoml.org/en/latest\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn about managing model serving deployments with BentoML\n              <span role=\"img\" aria-label=\"note\">\n                🔗\n              </span>\n            </a>\n          );\n        }\n\n        return (\n          <Section>\n            <h2>Latest Deployments</h2>\n            {deploymentDisplay}\n          </Section>\n        );\n      }}\n    </HttpRequestContainer>\n    <HttpRequestContainer\n      url=\"/api/ListBento\"\n      method=\"get\"\n      params={{ limit: 5 }}\n    >\n      {({ data }) => {\n        if (data && data.bentos) {\n          return (\n            <Section>\n              <h2>Latest Models</h2>\n              <BentoServiceTable bentos={data.bentos} />\n            </Section>\n          );\n        } else {\n          return (\n            <Section>\n              <h2>No model found</h2>\n              <a\n                href=\"https://docs.bentoml.org/en/latest\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn about packaging ML model for serving with BentoML\n                <span role=\"img\" aria-label=\"note\">\n                  🔗\n                </span>\n              </a>\n            </Section>\n          );\n        }\n      }}\n    </HttpRequestContainer>\n  </div>\n);\n\nexport default HomePage;\n","import * as React from \"react\";\nimport * as lodash from \"lodash\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport DeploymentsTable from \"../components/DeploymentsTable\";\n\nconst getActiveDeploymentCount = (deployments) => {\n  return (\n    lodash.filter(\n      deployments,\n      (deployment) =>\n        deployment.state &&\n        deployment.state.state &&\n        deployment.state.state === \"RUNNING\"\n    ).length || 0\n  );\n};\n\nconst DeploymentsList = (props) => {\n  const params = props.match.params;\n  let requestParams;\n  if (params.namespace) {\n    requestParams = { namespace: params.namespace };\n  }\n  return (\n    <HttpRequestContainer\n      url=\"/api/ListDeployments\"\n      method=\"get\"\n      params={requestParams}\n    >\n      {({ data }) => {\n        let activeDeploymentCount = 0;\n        let deploymentDisplay;\n\n        if (data && data.deployments) {\n          activeDeploymentCount = getActiveDeploymentCount(data.deployments);\n          deploymentDisplay = (\n            <DeploymentsTable deployments={data.deployments} />\n          );\n        } else {\n          deploymentDisplay = (\n            <a\n              href=\"https://docs.bentoml.org/en/latest\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn more about managing model serving deployments with BentoML\n            </a>\n          );\n        }\n\n        return (\n          <div>\n            <h2>Active Deployments: {activeDeploymentCount}</h2>\n            {deploymentDisplay}\n          </div>\n        );\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default DeploymentsList;\n","import * as React from \"react\";\nimport * as lodash from \"lodash\";\n\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\nconst parseKeyForDisplay = (key: string) => {\n  return lodash.capitalize(key).replace(\"_\", \" \");\n};\n\nconst ConfigurationTable = ({ spec }) => {\n  const parsedConfiguration = [{ content: [\"Platform\", spec.operator] }];\n  switch (spec.operator) {\n    case \"AWS_LAMBDA\":\n      lodash.each(spec.aws_lambda_operator_config, (value, key) => {\n        switch (key) {\n          case \"memory_size\":\n            value = value + \" MB\";\n            break;\n          case \"timeout\":\n            value = value + \" seconds\";\n            break;\n        }\n\n        parsedConfiguration.push({ content: [parseKeyForDisplay(key), value] });\n      });\n      break;\n    case \"AWS_SAGEMAKER\":\n      lodash.each(spec.aws_lambda_operator_config, (value, key) => {\n        parsedConfiguration.push({ content: [parseKeyForDisplay(key), value] });\n      });\n      break;\n  }\n\n  return (\n    <Section>\n      <h2>Configuration</h2>\n      <Table content={parsedConfiguration} ratio={[1, 4]} />\n    </Section>\n  );\n};\n\nexport default ConfigurationTable;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\nconst inputConfigToTableContent = (\n  input_config: any\n): string | null | undefined | Array<any> => {\n  if (!input_config) {\n    return [\"None\"];\n  }\n  const config = input_config.fields;\n  /*\n    grpc format for JSON:\n    example\n    fields {\n      input_type: {\n        nullValue: 'NULL_VALUE',\n      },\n      orient: {\n        stringValue: 'frame',\n      }\n    }\n    */\n\n  const displayInputList: React.ReactNode[] = [];\n  const configureKeys = Object.keys(config);\n  for (let index = 0; index < configureKeys.length; index++) {\n    const key = configureKeys[index];\n    const valueObject = config[key];\n    const valueType = Object.keys(valueObject)[0];\n    let value = Object.values(valueObject)[0];\n    if (valueType === \"nullValue\") {\n      value = \"null\";\n    }\n\n    displayInputList.push(<p key={index}>{`${key}: ${value}`}</p>);\n  }\n  return displayInputList;\n};\n\ninterface IApiProps {\n  name: string;\n  input_type: string;\n  docs: string;\n  input_config: { [key: string]: string };\n  output_type: string;\n  batch: boolean;\n  route: string;\n}\n\nconst APIS_TABLE_HEADER = [\n  \"API name\",\n  \"route\",\n  \"is batch enabled\",\n  \"Input type\",\n  \"Input Config\",\n  \"Output type\",\n  \"Documentation\",\n];\n\nconst APIS_TABLE_RATIO = [1, 1, 1, 1, 1, 1, 4];\n\nconst ApisTable: React.FC<{ apis: Array<IApiProps> }> = ({ apis }) => {\n  const apisTableContent = apis.map((api) => ({\n    content: [\n      api.name,\n      api.route ? api.route : `/${api.name}`,\n      api.batch ? \"Yes\" : \"No\",\n      api.input_type,\n      inputConfigToTableContent(api.input_config),\n      api.output_type,\n      api.docs,\n    ],\n  }));\n  return (\n    <Section>\n      <h2>APIs</h2>\n      <Table\n        content={apisTableContent}\n        header={APIS_TABLE_HEADER}\n        ratio={APIS_TABLE_RATIO}\n      />\n    </Section>\n  );\n};\nexport default ApisTable;\n","import * as React from \"react\";\nimport HttpRequestContainer from \"../../utils/HttpRequestContainer\";\nimport ApisTable from \"../BentoServiceDetail/ApisTable\";\nimport { Section } from \"../../ui/Layout\";\n\nconst DeploymentApisTable = ({ deployment }) => {\n  let apiName;\n  switch (deployment.spec.operator) {\n    case \"AWS_LAMBDA\":\n      apiName = deployment.spec.aws_lambda_operator_config.api_name;\n      break;\n    case \"AWS_SAGEMAKER\":\n      apiName = deployment.spec.sagemaker_opeartor_config.api_name;\n      break;\n  }\n  return (\n    <HttpRequestContainer\n      url=\"/api/GetBento\"\n      params={{\n        bento_name: deployment.spec.bento_name,\n        bento_version: deployment.spec.bento_version,\n      }}\n    >\n      {(data) => {\n        if (data && data.data && data.data.bento) {\n          const bento = data.data.bento;\n          let { apis } = bento.bento_service_metadata;\n          if (apiName) {\n            const deployedApi = apis.find((api) => {\n              return api.name === apiName;\n            });\n            apis = [deployedApi];\n          }\n          return <ApisTable apis={apis} />;\n        } else {\n          return (\n            <Section>\n              <h3>APIs</h3>\n              <div>No APIs</div>\n            </Section>\n          );\n        }\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default DeploymentApisTable;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { displayTimeInFromNowFormat, displayTimeISOString } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport { Section } from \"../../ui/Layout\";\n\nconst displayTimestampForDeployment = (seconds: number) => {\n  return `${displayTimeInFromNowFormat(seconds, true)} (${displayTimeISOString(\n    seconds\n  )})`;\n};\n\nconst InfoTable = ({ deployment }) => {\n  let endpointValues = \"Not Available\";\n  if (deployment.state.state === \"RUNNING\" && deployment.state.info_json) {\n    const infoJson = JSON.parse(deployment.state.info_json);\n    endpointValues = infoJson.endpoints.join(\"\\n\");\n  }\n  const parsedInfo = [\n    {\n      content: [\n        \"Created at\",\n        displayTimestampForDeployment(Number(deployment.created_at.seconds)),\n      ],\n    },\n    {\n      content: [\n        \"Updated at\",\n        displayTimestampForDeployment(\n          Number(deployment.last_updated_at.seconds)\n        ),\n      ],\n    },\n    {\n      content: [\n        \"BentoService\",\n        <Link\n          to={`/repository/${deployment.spec.bento_name}/${deployment.spec.bento_version}`}\n        >\n          {`${deployment.spec.bento_name}:${deployment.spec.bento_version}`}\n        </Link>,\n      ],\n    },\n    {\n      content: [\"Endpoint\", endpointValues],\n    },\n  ];\n  return (\n    <Section>\n      <h2>Info</h2>\n      <Table content={parsedInfo} ratio={[1, 4]} />\n    </Section>\n  );\n};\n\nexport default InfoTable;\n","import * as React from \"react\";\nimport { Card } from \"@blueprintjs/core\";\n\nconst ErrorCard = ({ state }) => {\n  if ([\"FAILED\", \"ERROR\", \"CRASH_LOOP_BACK_OFF\"].indexOf(state.state) !== -1) {\n    return (\n      <Card elevation={3} style={{ backgroundColor: \"orange\" }}>\n        {state.error_message}\n      </Card>\n    );\n  }\n  return null;\n};\n\nexport default ErrorCard;\n","import * as React from \"react\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport ConfigurationTable from \"../components/DeploymentDetail/ConfigurationTable\";\nimport DeploymentApisTable from \"../components/DeploymentDetail/ApisTable\";\nimport InfoTable from \"../components/DeploymentDetail/InfoTable\";\nimport DeploymentStatusTag from \"../components/DeploymentDetail/DeploymentStatusTag\";\nimport ErrorCard from \"../components/DeploymentDetail/ErrorCard\";\n\nconst DeploymentDetails = (props) => {\n  const params = props.match.params;\n  return (\n    <HttpRequestContainer\n      url=\"/api/GetDeployment\"\n      params={{ deployment_name: params.name, namespace: params.namespace }}\n    >\n      {(data) => {\n        let detailDisplay;\n\n        if (data.data && data.data.deployment) {\n          const deployment = data.data.deployment;\n          detailDisplay = (\n            <div>\n              <h1>\n                Deployment: {deployment.name}{\" \"}\n                <DeploymentStatusTag state={deployment.state.state} />\n              </h1>\n              <ErrorCard state={deployment.state} />\n              <InfoTable deployment={deployment} />\n              <ConfigurationTable spec={deployment.spec} />\n              <DeploymentApisTable deployment={deployment} />\n            </div>\n          );\n        } else {\n          detailDisplay = <div>{JSON.stringify(data)}</div>;\n        }\n        return <div>{detailDisplay}</div>;\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default DeploymentDetails;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getQueryObject } from \"../utils\";\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport BentoServiceTable from \"../components/BentoServiceTable\";\nimport { Section } from \"../ui/Layout\";\n\nconst DEFAULT_BENTO_SERVICE_LIMIT_PER_PAGE = 30;\n\nconst Repository = (props) => {\n  const query = getQueryObject(props.location.search);\n  const offset = Number(query.offset) || 0;\n  return (\n    <HttpRequestContainer\n      url=\"/api/ListBento\"\n      method=\"get\"\n      params={{ limit: DEFAULT_BENTO_SERVICE_LIMIT_PER_PAGE, offset }}\n    >\n      {({ data }) => {\n        let hasBento = false;\n        let bentoDisplay;\n        if (data && data.bentos) {\n          hasBento = true;\n\n          bentoDisplay = <BentoServiceTable bentos={data.bentos} />;\n        } else {\n          bentoDisplay = <Section>No more models found</Section>;\n        }\n        return (\n          <Section>\n            {bentoDisplay}\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div>\n                {offset > 0 && (\n                  <Link to={`/repository?offset=${offset - 10}`}>Previous</Link>\n                )}\n              </div>\n              <div>\n                {hasBento && (\n                  <Link to={`/repository?offset=${offset + 10}`}>Next</Link>\n                )}\n              </div>\n            </div>\n          </Section>\n        );\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default Repository;\n","import * as React from \"react\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport BentoServiceTable from \"../components/BentoServiceTable\";\n\nconst BentoServicesList = (props) => {\n  const params = props.match.params;\n  return (\n    <div>\n      <HttpRequestContainer\n        url=\"/api/ListBento\"\n        method=\"get\"\n        params={{ bento_name: params.name }}\n      >\n        {({ data }) => {\n          if (data && data.bentos) {\n            return (\n              <div>\n                <h2>{params.name}</h2>\n                <BentoServiceTable bentos={data.bentos} />\n              </div>\n            );\n          } else {\n            return <div>{JSON.stringify(data)}</div>;\n          }\n        }}\n      </HttpRequestContainer>\n    </div>\n  );\n};\n\nexport default BentoServicesList;\n","import * as React from \"react\";\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\nconst ENV_TABLE_RATIO = [1, 4];\n\nconst EnvTable: React.FC<{ env: { [key: string]: any } }> = ({ env }) => {\n  const envKeys = Object.keys(env);\n\n  const parsedEnv = envKeys.map((key) => {\n    let env_value = env[key];\n    if (key === \"pip_packages\") {\n      env_value = env[key].join(\"\\n\");\n    }\n    return { content: [key, env_value] };\n  });\n\n  return (\n    <Section>\n      <h2>Environments</h2>\n      <Table content={parsedEnv} ratio={ENV_TABLE_RATIO} />\n    </Section>\n  );\n};\n\nexport default EnvTable;\n","import * as React from \"react\";\nimport * as lodash from \"lodash\";\nimport Table from \"../../ui/Table\";\nimport { Section } from \"../../ui/Layout\";\n\ninterface IArtifactProps {\n  name: string;\n  artifact_type: string;\n  metadata: any;\n}\n\nconst ARTIFACTS_TABLE_HEADER = [\"Name\", \"Type\", \"Metadata\"];\nconst ARTIFACTS_TABLE_RATIO = [1, 2, 4];\n\nconst parseGrpcStructToObject = (structObject) => {\n  /*\n    grpc format for Struct format:\n    key: {\n      fields: {\n        key: {\n          structValue: {\n            fields: {\n              key: {\n                listValue: {\n                  values: [\n                    {numberValue: 1},\n                    {stringValue: 'abc'},\n                  ]\n                }\n              },\n              key: {\n                stringValue: '123'\n              },\n            }\n          }\n        }\n      }\n    }\n  */\n  let result = {};\n  if (structObject.fields) {\n    structObject = structObject.fields;\n  }\n  const keyList = Object.keys(structObject);\n  for (let index = 0; index < keyList.length; index++) {\n    const key = keyList[index];\n    const valueObject = structObject[key];\n    const valueType = Object.keys(valueObject)[0];\n    const value: any = Object.values(valueObject)[0];\n    switch (valueType) {\n      case \"structValue\":\n        result[key] = parseGrpcStructToObject(value);\n        break;\n      case \"listValue\":\n        result[key] = [];\n        lodash.forEach(value, (item) => {\n          result[key].push(parseGrpcStructToObject(item));\n        });\n        break;\n      case \"nullValue\":\n        result[key] = \"null\";\n        break;\n      default:\n        result[key] = value;\n    }\n  }\n\n  return result;\n};\n\nconst artifactMetadataToTableContent = (artifactMetadata: any): string => {\n  if (!artifactMetadata) {\n    return \"None\";\n  }\n  let result = parseGrpcStructToObject(artifactMetadata);\n  return JSON.stringify(result);\n};\n\nconst ArtifactsTable: React.FC<{ artifacts: Array<IArtifactProps> }> = ({\n  artifacts,\n}) => {\n  if (artifacts && artifacts.length > 0) {\n    const artifactsTableContent = artifacts.map((artifact) => {\n      return {\n        content: [\n          artifact.name,\n          artifact.artifact_type,\n          artifactMetadataToTableContent(artifact.metadata),\n        ],\n      };\n    });\n    return (\n      <Section>\n        <h2>Artifacts</h2>\n        <Table\n          content={artifactsTableContent}\n          ratio={ARTIFACTS_TABLE_RATIO}\n          header={ARTIFACTS_TABLE_HEADER}\n        />\n      </Section>\n    );\n  } else {\n    return (\n      <Section>\n        <h2>Artifacts</h2>\n        <p>No Artifacts</p>\n      </Section>\n    );\n  }\n};\n\nexport default ArtifactsTable;\n","import * as React from \"react\";\nimport * as lodash from \"lodash\";\nimport Label from \"./Label\";\n\nexport interface ILabelDetailSectionProps {\n  labels: any;\n}\n\nconst LabelDetailSection: React.FC<ILabelDetailSectionProps> = (props) => {\n  return (\n    <p>\n      <b>Labels: </b>{\" \"}\n      {lodash.map(props.labels, (value, name) => {\n        return <Label name={name} value={value} />;\n      })}\n    </p>\n  );\n};\n\nexport default LabelDetailSection;\n","import * as React from \"react\";\nimport * as moment from \"moment\";\n\nimport HttpRequestContainer from \"../utils/HttpRequestContainer\";\nimport EnvTable from \"../components/BentoServiceDetail/EnvTable\";\nimport ApisTable from \"../components/BentoServiceDetail/ApisTable\";\nimport ArtifactsTable from \"../components/BentoServiceDetail/ArtifactsTable\";\nimport { Section } from \"../ui/Layout\";\nimport LabelDetailSection from \"../components/LabelDetailSection\";\n\nconst BentoServiceDetail = (props) => {\n  const params = props.match.params;\n\n  return (\n    <HttpRequestContainer\n      url=\"/api/GetBento\"\n      params={{ bento_name: params.name, bento_version: params.version }}\n    >\n      {({ data }) => {\n        let displayBentoServiceDetail;\n\n        if (data && data.bento) {\n          const bento = data.bento;\n\n          displayBentoServiceDetail = (\n            <div>\n              <p>\n                <b>Created at: </b>\n                {moment\n                  .unix(Number(bento.bento_service_metadata.created_at.seconds))\n                  .toDate()\n                  .toLocaleString()}\n              </p>\n              <p>\n                <b>Storage: </b> {bento.uri.uri}\n              </p>\n              <LabelDetailSection\n                labels={bento.bento_service_metadata.labels}\n              />\n              <ApisTable apis={bento.bento_service_metadata.apis} />\n              <ArtifactsTable\n                artifacts={bento.bento_service_metadata.artifacts}\n              />\n              <EnvTable env={bento.bento_service_metadata.env} />\n            </div>\n          );\n        } else {\n          displayBentoServiceDetail = <div>{JSON.stringify(data)}</div>;\n        }\n\n        return (\n          <Section>\n            <h2>\n              {params.name}:{params.version}\n            </h2>\n            {displayBentoServiceDetail}\n          </Section>\n        );\n      }}\n    </HttpRequestContainer>\n  );\n};\n\nexport default BentoServiceDetail;\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { capitalize } from \"lodash\";\n\nimport {\n  Breadcrumbs as BlueprintBreadcrumbs,\n  IBreadcrumbProps,\n} from \"@blueprintjs/core\";\nimport { Section } from \"../ui/Layout\";\n\nexport interface IBreadcrumbsProps {\n  baseURL: string;\n}\n\nconst Breadcrumbs: React.FC<IBreadcrumbsProps> = (props) => {\n  const [breadcrumbs, setBreadcrumbs] = React.useState<Array<IBreadcrumbProps>>(\n    []\n  );\n  const location = useLocation();\n  const { baseURL } = props;\n  const HOME_CRUMB: IBreadcrumbProps = {\n    text: \"Home\",\n    href: baseURL + \"/\",\n  };\n\n  React.useEffect(() => {\n    const parsedBreadcrumbs = getBreadcrumbs(baseURL, location.pathname);\n    setBreadcrumbs(parsedBreadcrumbs);\n  }, [baseURL, location]);\n\n  breadcrumbs.length > 0 && breadcrumbs.unshift(HOME_CRUMB);\n  if (breadcrumbs.length === 0) {\n    return null;\n  }\n  return (\n    <Section>\n      <BlueprintBreadcrumbs items={breadcrumbs} />\n    </Section>\n  );\n};\n\nconst getBreadcrumbs = (\n  baseURL: string,\n  pathname: string\n): Array<IBreadcrumbProps> => {\n  const pathSnippets = pathname.split(\"/\").filter((i) => i);\n\n  return pathSnippets.map((name, index) => {\n    const isLastOne = index === pathSnippets.length - 1;\n    const url = `/${pathSnippets.slice(0, index + 1).join(\"/\")}`;\n\n    let formattedName = name;\n    if ([\"repository\", \"deployments\"].includes(name)) {\n      formattedName = capitalize(name);\n    }\n    return isLastOne\n      ? { text: formattedName }\n      : { text: formattedName, href: baseURL + url };\n  });\n};\n\nexport default Breadcrumbs;\n","import * as React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport {\n  Navbar,\n  NavbarGroup,\n  NavbarHeading,\n  NavbarDivider,\n  Alignment,\n  AnchorButton,\n  Classes,\n} from \"@blueprintjs/core\";\n\nimport logo from \"../assets/bentoml-logo.png\";\n\nconst NavigationBar = (props) => {\n  const [highlight, setHighlight] = React.useState(\"\");\n  const location = useLocation();\n  const { baseURL } = props;\n\n  React.useEffect(() => {\n    const currentLocation = location.pathname.split(\"/\")[1];\n    setHighlight(currentLocation);\n  }, [location]);\n\n  return (\n    <Navbar style={{ paddingLeft: \"10%\", marginLeft: 0 }}>\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavbarHeading>\n          <Link to=\"/\">\n            <img src={baseURL + `/${logo}`} width={150} alt={\"\"} />{\" \"}\n          </Link>\n        </NavbarHeading>\n        <NavbarDivider />\n        <AnchorButton\n          className={Classes.MINIMAL}\n          large\n          text=\"Repository\"\n          href={baseURL + \"/repository\"}\n          style={getHighlightStyle(highlight, \"repository\")}\n        />\n        <AnchorButton\n          className={Classes.MINIMAL}\n          large\n          text=\"Deployments\"\n          href={baseURL + \"/deployments\"}\n          style={getHighlightStyle(highlight, \"deployments\")}\n        />\n      </NavbarGroup>\n    </Navbar>\n  );\n};\n\nconst getHighlightStyle = (highlight, path) => ({\n  fontWeight: highlight === path ? (\"bold\" as \"bold\") : (\"normal\" as \"normal\"),\n});\n\nexport default NavigationBar;\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport DeploymentsList from \"./pages/DeploymentsList\";\nimport DeploymentDetails from \"./pages/DeploymentDetails\";\nimport Repository from \"./pages/Repository\";\nimport BentoServicesList from \"./pages/BentoServiceList\";\nimport BentoServiceDetail from \"./pages/BentoServiceDetail\";\nimport Layout from \"./ui/Layout\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport { setBaseUrl } from \"./utils/HttpRequestContainer\";\nimport { useCookies } from \"react-cookie\";\n\nexport const App = () => {\n  const [cookies] = useCookies();\n  const baseURL =\n    cookies[\"baseURLCookie\"] === undefined\n      ? \"/\"\n      : \"/\" + cookies[\"baseURLCookie\"];\n  setBaseUrl(baseURL);\n  return (\n    <BrowserRouter basename={baseURL}>\n      <NavigationBar baseURL={baseURL} />\n      <Layout>\n        <Breadcrumbs baseURL={baseURL} />\n        <div>\n          <Switch>\n            <Route\n              path=\"/deployments/:namespace/:name\"\n              component={DeploymentDetails}\n            />\n            <Route path=\"/deployments/:namespace\" component={DeploymentsList} />\n            <Route path=\"/deployments\" component={DeploymentsList} />\n\n            <Route\n              path=\"/repository/:name/:version\"\n              component={BentoServiceDetail}\n            />\n            <Route path=\"/repository/:name\" component={BentoServicesList} />\n            <Route path=\"/repository\" component={Repository} />\n\n            <Route path=\"/about\" component={HomePage} />\n            <Route path=\"/config\" component={HomePage} />\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n        </div>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n\nimport { App } from \"./app\";\n\nrender(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/bentoml-logo.21d67caf.png\";"],"sourceRoot":""}